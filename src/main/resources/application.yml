spring:
  application:
    name: demo-app
  datasource:
    url: jdbc:oracle:thin:@10.8.132.222:1521/eastcom
    driver-class-name: oracle.jdbc.OracleDriver
    username: fm
    password: HNfm!23$
  activemq:
    broker-url: tcp://10.8.132.157:3130
    packages:
      trust-all: true
    password: ''
    user: ''
  redis:
    host: 10.8.132.157
    port: 3240
    password: eD2(iRu_d1
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/*.xml
redisson:
  singleServerConfig:
    address: "redis://10.8.132.157:3240"
    password: eD2(iRu_d1
  #LiteFlow
liteflow:
  rule-source-ext-data-map:
    applicationName: demo
    #是否开启SQL日志
    sqlLogEnabled: true
    #是否开启SQL数据轮询自动刷新机制 默认不开启
    pollingEnabled: true
    pollingIntervalSeconds: 1800
    pollingStartSeconds: 1800
    #以下是chain表的配置，这个一定得有
    chainTableName: fm_policy_rules_new
    chainApplicationNameField: rule_name
    chainNameField: id
    elDataField: el_data
    #是否启用这条规则
    chainEnableField: is_deploy
    chainCustomSql: select * from fm_policy_rules_new where  is_deploy = 1
    #以下是script表的配置，如果你没使用到脚本，下面可以不配置
    scriptTableName: fm_policy_rules_script
    scriptIdField: SCRIPT_KEY
    scriptNameField: script_name
    scriptDataField: script_data
    scriptTypeField: script_type
    scriptLanguageField: script_language
    #是否启用这条脚本
    scriptEnableField: enable
    #脚本表自定义过滤SQL
    scriptCustomSql: select * from fm_policy_rules_script where enable = 1
  #默认为false，如果设为true，则会开启WHEN的线程池隔离机制，这意味着每一个when都会有单独的线程池。
  #这个特性对于运行复杂的嵌套when时是可以提升运行速度的且规避掉一些锁的问题。
  when-thread-pool-isolate: true